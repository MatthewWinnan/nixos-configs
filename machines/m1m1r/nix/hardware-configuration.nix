# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/profiles/qemu-guest.nix")
    ];

  boot.initrd.availableKernelModules = [ "uhci_hcd" "ehci_pci" "ahci" "virtio_pci" "virtio_scsi" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d3ec42d8-1bc7-4d78-95ea-610932f5b9cc";
      fsType = "btrfs";
      options = [ "subvol=root" ];
    };

  boot.initrd.luks.devices."crypted".device = "/dev/disk/by-uuid/741b2e97-60e0-4586-bdb6-a5a2b0405b9b";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/95B1-D3B2";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/d3ec42d8-1bc7-4d78-95ea-610932f5b9cc";
      fsType = "btrfs";
      options = [ "subvol=home" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/d3ec42d8-1bc7-4d78-95ea-610932f5b9cc";
      fsType = "btrfs";
      options = [ "subvol=nix" ];
    };

  fileSystems."/persist" =
    { device = "/dev/disk/by-uuid/d3ec42d8-1bc7-4d78-95ea-610932f5b9cc";
      fsType = "btrfs";
      options = [ "subvol=persist" ];
    };

  fileSystems."/snapshots" =
    { device = "/dev/disk/by-uuid/d3ec42d8-1bc7-4d78-95ea-610932f5b9cc";
      fsType = "btrfs";
      options = [ "subvol=snapshots" ];
    };

  fileSystems."/tmp" =
    { device = "/dev/disk/by-uuid/d3ec42d8-1bc7-4d78-95ea-610932f5b9cc";
      fsType = "btrfs";
      options = [ "subvol=tmp" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/d3ec42d8-1bc7-4d78-95ea-610932f5b9cc";
      fsType = "btrfs";
      options = [ "subvol=log" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/6cfc125a-ab47-41ef-bc7c-afbdc652d674"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens18.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
